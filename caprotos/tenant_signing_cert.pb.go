// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: tenant_signing_cert.proto

package caprotos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateTenantSigningCertificateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Common request header including protocol version & request identifier.
	Header *CaRequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// Version of the CreateTenantSigningCertificateRequest message.
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	// Unique identifier for the tenant (Tenant ID).
	Tid string `protobuf:"bytes,3,opt,name=tid,proto3" json:"tid,omitempty"`
	// Display name of the tenant.
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// DNS domain name of the tenant. eg. 'fakephilosopher.com'.
	DomainName string `protobuf:"bytes,5,opt,name=domain_name,json=domainName,proto3" json:"domain_name,omitempty"`
}

func (x *CreateTenantSigningCertificateRequest) Reset() {
	*x = CreateTenantSigningCertificateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenant_signing_cert_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTenantSigningCertificateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTenantSigningCertificateRequest) ProtoMessage() {}

func (x *CreateTenantSigningCertificateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tenant_signing_cert_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTenantSigningCertificateRequest.ProtoReflect.Descriptor instead.
func (*CreateTenantSigningCertificateRequest) Descriptor() ([]byte, []int) {
	return file_tenant_signing_cert_proto_rawDescGZIP(), []int{0}
}

func (x *CreateTenantSigningCertificateRequest) GetHeader() *CaRequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *CreateTenantSigningCertificateRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *CreateTenantSigningCertificateRequest) GetTid() string {
	if x != nil {
		return x.Tid
	}
	return ""
}

func (x *CreateTenantSigningCertificateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateTenantSigningCertificateRequest) GetDomainName() string {
	if x != nil {
		return x.DomainName
	}
	return ""
}

type CreateTenantSigningCertificateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Common response header including protocol version & request identifier.
	Header *CaResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// Creation timestamp.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
}

func (x *CreateTenantSigningCertificateResponse) Reset() {
	*x = CreateTenantSigningCertificateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenant_signing_cert_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTenantSigningCertificateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTenantSigningCertificateResponse) ProtoMessage() {}

func (x *CreateTenantSigningCertificateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tenant_signing_cert_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTenantSigningCertificateResponse.ProtoReflect.Descriptor instead.
func (*CreateTenantSigningCertificateResponse) Descriptor() ([]byte, []int) {
	return file_tenant_signing_cert_proto_rawDescGZIP(), []int{1}
}

func (x *CreateTenantSigningCertificateResponse) GetHeader() *CaResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *CreateTenantSigningCertificateResponse) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

type GetTenantSigningCertificateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Common request header including protocol version & request identifier.
	Header *CaRequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// Version of the GetTenantSigningCertificateRequest message.
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	// Unique identifier for the tenant (Tenant ID).
	Tid string `protobuf:"bytes,3,opt,name=tid,proto3" json:"tid,omitempty"`
}

func (x *GetTenantSigningCertificateRequest) Reset() {
	*x = GetTenantSigningCertificateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenant_signing_cert_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTenantSigningCertificateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTenantSigningCertificateRequest) ProtoMessage() {}

func (x *GetTenantSigningCertificateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tenant_signing_cert_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTenantSigningCertificateRequest.ProtoReflect.Descriptor instead.
func (*GetTenantSigningCertificateRequest) Descriptor() ([]byte, []int) {
	return file_tenant_signing_cert_proto_rawDescGZIP(), []int{2}
}

func (x *GetTenantSigningCertificateRequest) GetHeader() *CaRequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *GetTenantSigningCertificateRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *GetTenantSigningCertificateRequest) GetTid() string {
	if x != nil {
		return x.Tid
	}
	return ""
}

type GetTenantSigningCertificateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Common response header including protocol version & request identifier.
	Header *CaResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// Tenant signing certificate (DER bytes)
	SigningCertificate []byte `protobuf:"bytes,2,opt,name=signing_certificate,json=signingCertificate,proto3" json:"signing_certificate,omitempty"`
}

func (x *GetTenantSigningCertificateResponse) Reset() {
	*x = GetTenantSigningCertificateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenant_signing_cert_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTenantSigningCertificateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTenantSigningCertificateResponse) ProtoMessage() {}

func (x *GetTenantSigningCertificateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tenant_signing_cert_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTenantSigningCertificateResponse.ProtoReflect.Descriptor instead.
func (*GetTenantSigningCertificateResponse) Descriptor() ([]byte, []int) {
	return file_tenant_signing_cert_proto_rawDescGZIP(), []int{3}
}

func (x *GetTenantSigningCertificateResponse) GetHeader() *CaResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *GetTenantSigningCertificateResponse) GetSigningCertificate() []byte {
	if x != nil {
		return x.SigningCertificate
	}
	return nil
}

type DeleteTenantSigningCertificateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Common request header including protocol version & request identifier.
	Header *CaRequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// Version of the DeleteTenantSigningCertificateRequest message.
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	// Unique identifier for the tenant (Tenant ID).
	Tid string `protobuf:"bytes,3,opt,name=tid,proto3" json:"tid,omitempty"`
}

func (x *DeleteTenantSigningCertificateRequest) Reset() {
	*x = DeleteTenantSigningCertificateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenant_signing_cert_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTenantSigningCertificateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTenantSigningCertificateRequest) ProtoMessage() {}

func (x *DeleteTenantSigningCertificateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tenant_signing_cert_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTenantSigningCertificateRequest.ProtoReflect.Descriptor instead.
func (*DeleteTenantSigningCertificateRequest) Descriptor() ([]byte, []int) {
	return file_tenant_signing_cert_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteTenantSigningCertificateRequest) GetHeader() *CaRequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *DeleteTenantSigningCertificateRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *DeleteTenantSigningCertificateRequest) GetTid() string {
	if x != nil {
		return x.Tid
	}
	return ""
}

type DeleteTenantSigningCertificateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Common response header including protocol version & request identifier.
	Header *CaResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// Deletion timestamp.
	DeleteTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=delete_time,json=deleteTime,proto3" json:"delete_time,omitempty"`
}

func (x *DeleteTenantSigningCertificateResponse) Reset() {
	*x = DeleteTenantSigningCertificateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenant_signing_cert_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTenantSigningCertificateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTenantSigningCertificateResponse) ProtoMessage() {}

func (x *DeleteTenantSigningCertificateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tenant_signing_cert_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTenantSigningCertificateResponse.ProtoReflect.Descriptor instead.
func (*DeleteTenantSigningCertificateResponse) Descriptor() ([]byte, []int) {
	return file_tenant_signing_cert_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteTenantSigningCertificateResponse) GetHeader() *CaResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *DeleteTenantSigningCertificateResponse) GetDeleteTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DeleteTime
	}
	return nil
}

var File_tenant_signing_cert_proto protoreflect.FileDescriptor

var file_tenant_signing_cert_proto_rawDesc = []byte{
	0x0a, 0x19, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67,
	0x5f, 0x63, 0x65, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x63, 0x61, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x1a, 0x0f, 0x63, 0x61, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbb, 0x01, 0x0a, 0x25, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x43,
	0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x31, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x63, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x43, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x10,
	0x0a, 0x03, 0x74, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x99, 0x01, 0x0a, 0x26, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x43, 0x65, 0x72,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x32, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x63, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x43, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0x83, 0x01, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x53,
	0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x61, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x43, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x74, 0x69, 0x64, 0x22, 0x8a, 0x01, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x54,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x43, 0x65, 0x72, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x32, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x63, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x43, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x13, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x63,
	0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x12, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x22, 0x86, 0x01, 0x0a, 0x25, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x43, 0x65, 0x72, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31,
	0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x63, 0x61, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x43, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x74,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x69, 0x64, 0x22, 0x99, 0x01,
	0x0a, 0x26, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x53, 0x69,
	0x67, 0x6e, 0x69, 0x6e, 0x67, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x61, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x43, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x0b,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x61, 0x7a, 0x63, 0x2e, 0x65, 0x78, 0x74, 0x2e, 0x68, 0x70, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x4b, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6e, 0x2f, 0x63, 0x61, 0x2f, 0x63, 0x61,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tenant_signing_cert_proto_rawDescOnce sync.Once
	file_tenant_signing_cert_proto_rawDescData = file_tenant_signing_cert_proto_rawDesc
)

func file_tenant_signing_cert_proto_rawDescGZIP() []byte {
	file_tenant_signing_cert_proto_rawDescOnce.Do(func() {
		file_tenant_signing_cert_proto_rawDescData = protoimpl.X.CompressGZIP(file_tenant_signing_cert_proto_rawDescData)
	})
	return file_tenant_signing_cert_proto_rawDescData
}

var file_tenant_signing_cert_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_tenant_signing_cert_proto_goTypes = []interface{}{
	(*CreateTenantSigningCertificateRequest)(nil),  // 0: caprotos.CreateTenantSigningCertificateRequest
	(*CreateTenantSigningCertificateResponse)(nil), // 1: caprotos.CreateTenantSigningCertificateResponse
	(*GetTenantSigningCertificateRequest)(nil),     // 2: caprotos.GetTenantSigningCertificateRequest
	(*GetTenantSigningCertificateResponse)(nil),    // 3: caprotos.GetTenantSigningCertificateResponse
	(*DeleteTenantSigningCertificateRequest)(nil),  // 4: caprotos.DeleteTenantSigningCertificateRequest
	(*DeleteTenantSigningCertificateResponse)(nil), // 5: caprotos.DeleteTenantSigningCertificateResponse
	(*CaRequestHeader)(nil),                        // 6: caprotos.CaRequestHeader
	(*CaResponseHeader)(nil),                       // 7: caprotos.CaResponseHeader
	(*timestamppb.Timestamp)(nil),                  // 8: google.protobuf.Timestamp
}
var file_tenant_signing_cert_proto_depIdxs = []int32{
	6, // 0: caprotos.CreateTenantSigningCertificateRequest.header:type_name -> caprotos.CaRequestHeader
	7, // 1: caprotos.CreateTenantSigningCertificateResponse.header:type_name -> caprotos.CaResponseHeader
	8, // 2: caprotos.CreateTenantSigningCertificateResponse.create_time:type_name -> google.protobuf.Timestamp
	6, // 3: caprotos.GetTenantSigningCertificateRequest.header:type_name -> caprotos.CaRequestHeader
	7, // 4: caprotos.GetTenantSigningCertificateResponse.header:type_name -> caprotos.CaResponseHeader
	6, // 5: caprotos.DeleteTenantSigningCertificateRequest.header:type_name -> caprotos.CaRequestHeader
	7, // 6: caprotos.DeleteTenantSigningCertificateResponse.header:type_name -> caprotos.CaResponseHeader
	8, // 7: caprotos.DeleteTenantSigningCertificateResponse.delete_time:type_name -> google.protobuf.Timestamp
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_tenant_signing_cert_proto_init() }
func file_tenant_signing_cert_proto_init() {
	if File_tenant_signing_cert_proto != nil {
		return
	}
	file_ca_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_tenant_signing_cert_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTenantSigningCertificateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenant_signing_cert_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTenantSigningCertificateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenant_signing_cert_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTenantSigningCertificateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenant_signing_cert_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTenantSigningCertificateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenant_signing_cert_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTenantSigningCertificateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenant_signing_cert_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTenantSigningCertificateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tenant_signing_cert_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tenant_signing_cert_proto_goTypes,
		DependencyIndexes: file_tenant_signing_cert_proto_depIdxs,
		MessageInfos:      file_tenant_signing_cert_proto_msgTypes,
	}.Build()
	File_tenant_signing_cert_proto = out.File
	file_tenant_signing_cert_proto_rawDesc = nil
	file_tenant_signing_cert_proto_goTypes = nil
	file_tenant_signing_cert_proto_depIdxs = nil
}
